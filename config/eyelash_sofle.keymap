#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;
    require-prior-idle-ms = <150>;
    flavor = "tap-preferred";
    hold-trigger-key-positions = <27 28 29 30 34 35 36 37>;
    hold-trigger-on-release;
    bindings = <&mkp>, <&mkp>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mouse_click: mouse_click {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSE_CLICK";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "balanced";
            hold-trigger-key-positions = <20>;
            hold-trigger-on-release;
            bindings = <&mkp>, <&mkp>;
        };

        mod_kp: mod_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            flavor = "hold-preferred";
            quick-tap-ms = <130>;
            hold-trigger-key-positions = <42 44 45 47 43 46>;
        };

        to_kp: to_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "TO_KP";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        mt_pinky: mt_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_PINKY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <14 26>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp EQUAL   &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW      &kp N6          &kp N7  &kp N8            &kp N9             &kp N0         &kp MINUS
&kp ESC     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW    &kp Y           &kp U   &kp I             &kp O              &kp P          &kp BACKSPACE
&kp TAB     &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW    &kp H           &kp J   &kp K             &kp L              &kp SEMI       &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW   &kp N           &kp M   &kp COMMA         &kp DOT            &kp FSLH       &kp RSHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 2   &kp SPACE    &kp C_PLAY_PAUSE  &to_kp 1 ENTER  &mo 3   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "QWERTY";
        };

        layer_1 {
            bindings = <
&kp EQUAL   &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW      &kp N6          &kp N7  &kp N8            &kp N9             &kp N0         &kp MINUS
&kp ESC     &kp Q      &kp W         &kp F         &kp P   &kp B        &kp DOWN_ARROW    &kp J           &kp L   &kp U             &kp Y              &kp SEMI       &kp BACKSPACE
&kp TAB     &kp A      &kp R         &kp S         &kp T   &kp G        &kp LEFT_ARROW    &kp M           &kp N   &kp E             &kp I              &kp O          &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp D   &kp V        &kp RIGHT_ARROW   &kp K           &kp H   &kp COMMA         &kp DOT            &kp FSLH       &kp RSHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 2   &kp SPACE    &kp C_PLAY_PAUSE  &to_kp 0 ENTER  &mo 3   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "CMKDH";
        };

        layer_2 {
            bindings = <
&kp F1         &kp F2             &kp F3        &kp F4         &kp F5         &kp F6           &mmv MOVE_UP          &kp F7         &kp F8         &kp F9        &kp F10       &kp F11            &kp F12
&kp LS(TILDE)  &kp LS(EXCL)       &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)    &mmv MOVE_DOWN        &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp PIPE      &kp BSLH           &trans
&kp GRAVE      &mt_pinky LGUI N1  &mt LCTRL N2  &mt LALT N3    &mt LSHIFT N4  &kp N5           &mmv MOVE_LEFT        &kp N6         &mt RSHIFT N7  &mt RALT N8   &mt RCTRL N9  &mt_pinky RGUI N0  &none
&trans         &none              &kp LBKT      &kp LBRC       &kp LPAR       &none            &mmv MOVE_RIGHT       &none          &kp RPAR       &kp RBRC      &kp RBKT      &none              &trans
&kp C_MUTE     &trans             &trans        &trans         &trans         &trans           &mouse_click MB2 MB1  &trans         &trans         &trans        &trans        &trans
            >;

            display-name = "SYMNUM";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&none   &none   &kp HOME     &kp PRINTSCREEN  &kp END        &none     &none  &none   &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS     &none
&trans  &none   &kp PAGE_UP  &kp UP           &kp PAGE_DOWN  &none     &none  &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &trans
&trans  &none   &kp LEFT     &kp DOWN         &kp RIGHT      &none     &none  &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT       &kp KP_ENTER
&trans  &none   &none        &none            &none          &none     &none  &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0  &trans
&none   &trans  &trans       &trans           &trans         &trans    &none  &trans  &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "ARROWNUM";
        };

        layer_4 {
            bindings = <
&none        &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_TOG    &trans  &bt BT_SEL 0  &bt BT_SEL 1                      &bt BT_SEL 2                       &bt BT_SEL 3                      &bt BT_SEL 4                       &bt BT_CLR
&trans       &none            &mkp MB2         &mmv MOVE_UP     &mkp MB1         &kp PRINTSCREEN    &trans  &mkp MCLK     &rgb_ug RGB_HUI                   &rgb_ug RGB_HUD                    &rgb_ug RGB_SAI                   &rgb_ug RGB_SAD                    &none
&bootloader  &msc SCRL_RIGHT  &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &msc SCRL_UP       &trans  &mkp MB1      &kp LEFT_SHIFT                    &kp LALT                           &kp LCTRL                         &kp LGUI                           &bootloader
&trans       &msc SCRL_LEFT   &mkp MB4         &mkp MCLK        &mkp MB5         &msc SCRL_DOWN     &none   &mkp MB2      &rgb_ug RGB_COLOR_HSB(186,96,47)  &rgb_ug RGB_COLOR_HSB(310,100,50)  &rgb_ug RGB_COLOR_HSB(18,100,50)  &rgb_ug RGB_COLOR_HSB(126,100,50)  &trans
&trans       &trans           &trans           &trans           &trans           &trans             &trans  &trans        &trans                            &none                              &none                             &none
            >;

            label = "MOUSE";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        MOUSE {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
