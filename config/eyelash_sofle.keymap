#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    tapping-term-ms = <220>;
    quick-tap-ms = <220>;
    require-prior-idle-ms = <150>;
    flavor = "tap-preferred";
    hold-trigger-key-positions = <27 28 29 30 34 35 36 37>;
    hold-trigger-on-release;
    bindings = <&mkp>, <&mkp>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    mouse_click: mouse_click {
        compatible = "zmk,behavior-hold-tap";
        label = "MOUSE_CLICK";
        bindings = <&mkp>, <&mkp>;

        #binding-cells = <2>;
        tapping-term-ms = <500>;
        flavor = "balanced";
        hold-trigger-key-positions = <58>;
        hold-trigger-on-release;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW      &kp N6     &kp N7  &kp N8     &kp N9      &kp N0     &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW    &kp Y      &kp U   &kp I      &kp O       &kp P      &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW    &kp H      &kp J   &kp K      &kp L       &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW   &kp N      &kp M   &kp COMMA  &kp DOT     &kp FSLH   &kp RSHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp C_PLAY_PAUSE  &kp ENTER  &mo 2   &kp RALT   &kp DELETE  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp F1    &kp F2  &kp F3    &kp F4      &kp F5         &mmv MOVE_UP          &kp F6     &kp F7            &kp F8             &kp F9                &kp F10                &trans
&trans      &none     &none   &kp F12   &kp F11     &none          &mmv MOVE_DOWN        &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSLH              &none                  &kp EQUAL
&kp TILDE   &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &mmv MOVE_LEFT        &kp CARET  &kp AMPERSAND     &kp STAR           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&trans      &none     &none   &none     &none       &none          &mmv MOVE_RIGHT       &none      &none             &none              &none                 &none                  &trans
&kp C_MUTE  &trans    &trans  &trans    &trans      &trans         &mouse_click MB2 MB1  &trans     &trans            &trans             &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &none   &kp HOME     &kp PRINTSCREEN  &kp END        &none     &none  &none   &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS     &trans
&trans  &none   &kp PAGE_UP  &kp UP           &kp PAGE_DOWN  &none     &none  &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &none
&none   &none   &kp LEFT     &kp DOWN         &kp RIGHT      &none     &none  &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT       &kp KP_ENTER
&trans  &none   &none        &none            &none          &none     &none  &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0  &trans
&none   &trans  &trans       &trans           &trans         &trans    &none  &trans  &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&rgb_ug RGB_COLOR_HSB(360,0,100)  &rgb_ug RGB_COLOR_HSB(258,100,50)  &rgb_ug RGB_COLOR_HSB(231,100,51)  &rgb_ug RGB_COLOR_HSB(105,100,50)  &rgb_ug RGB_COLOR_HSB(61,100,50)  &rgb_ug RGB_COLOR_HSB(0,100,49)    &none  &rgb_ug RGB_COLOR_HSB(20,100,50)  &rgb_ug RGB_COLOR_HSB(49,100,50)  &rgb_ug RGB_COLOR_HSB(144,100,50)  &rgb_ug RGB_COLOR_HSB(173,100,50)  &rgb_ug RGB_COLOR_HSB(301,100,50)  &studio_unlock
&none                             &rgb_ug RGB_EFR                    &rgb_ug RGB_BRD                    &rgb_ug RGB_BRI                    &rgb_ug RGB_EFF                   &rgb_ug RGB_TOG                    &none  &bt BT_DISC 0                     &bt BT_DISC 1                     &bt BT_DISC 2                      &bt BT_DISC 3                      &bt BT_DISC 4                      &none
&bt BT_CLR_ALL                    &none                              &none                              &bt BT_CLR                         &bt BT_NXT                        &bt BT_PRV                         &none  &bt BT_SEL 0                      &bt BT_SEL 1                      &bt BT_SEL 2                       &bt BT_SEL 3                       &bt BT_SEL 4                       &none
&none                             &none                              &none                              &none                              &none                             &none                              &none  &none                             &none                             &none                              &none                              &none                              &none
&none                             &none                              &none                              &none                              &trans                            &none                              &none  &none                             &trans                            &none                              &none                              &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
